$mat-white: (
  50: #ffffff,
  100: #ffcdd2,
  200: #ef9a9a,
  300: #e57373,
  400: #ef5350,
  500: #f44336,
  600: #e53935,
  700: #d32f2f,
  800: #c62828,
  900: #b71c1c,
  A100: #ff8a80,
  A200: #ff5252,
  A400: #ff1744,
  A700: #d50000,
  contrast: (
    50: rgb(32, 86, 158),
    100: rgb(32, 86, 158),
    200: rgb(32, 86, 158),
    300: rgb(32, 86, 158),
    400: rgb(32, 86, 158),
    500: rgb(32, 86, 158),
    600: rgb(32, 86, 158),
    700: rgb(32, 86, 158),
    800: rgb(32, 86, 158),
    900: rgb(32, 86, 158),
    A100: rgb(32, 86, 158),
    A200: rgb(32, 86, 158),
    A400: rgb(32, 86, 158),
    A700: rgb(32, 86, 158),
  ),
);

@use '@angular/material' as mat;
@include mat.core();

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$my-warn: mat.define-palette(mat.$red-palette);

$my-theme: mat.define-light-theme((
 color: (
   primary: $my-primary,
   accent: $my-accent,
   warn: $my-warn,
 ),
 typography: mat.define-typography-config(),
 density: 0,
));

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-theme);